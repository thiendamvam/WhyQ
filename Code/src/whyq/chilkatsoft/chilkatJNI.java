/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.3
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package whyq.chilkatsoft;

public class chilkatJNI {
  public final static native byte[] SWIG_JavaArrayOutUchar(long jarg1, long jarg2, long jarg3);
  public final static native void SWIG_JavaArrayInUchar(long jarg1, long jarg2, CkByteData jarg2_, byte[] jarg3);
  public final static native void SYSTEMTIME_wYear_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wYear_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMonth_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMonth_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wDayOfWeek_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wDayOfWeek_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wDay_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wDay_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wHour_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wHour_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMinute_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMinute_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wSecond_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wSecond_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMilliseconds_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMilliseconds_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native long new_SYSTEMTIME();
  public final static native void delete_SYSTEMTIME(long jarg1);
  public final static native long new_CkString();
  public final static native void delete_CkString(long jarg1);
  public final static native boolean CkString_loadFile(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native char CkString_charAt(long jarg1, CkString jarg1_, int jarg2);
  public final static native int CkString_intValue(long jarg1, CkString jarg1_);
  public final static native double CkString_doubleValue(long jarg1, CkString jarg1_);
  public final static native int CkString_countCharOccurances(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_appendCurrentDateRfc822(long jarg1, CkString jarg1_);
  public final static native void CkString_setStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_endsWith(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_endsWithStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_beginsWithStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native int CkString_indexOf(long jarg1, CkString jarg1_, String jarg2);
  public final static native int CkString_indexOfStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native int CkString_replaceAll(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_, long jarg3, CkString jarg3_);
  public final static native boolean CkString_replaceFirst(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_, long jarg3, CkString jarg3_);
  public final static native long CkString_substring(long jarg1, CkString jarg1_, int jarg2, int jarg3);
  public final static native boolean CkString_matchesStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_matches(long jarg1, CkString jarg1_, String jarg2);
  public final static native long CkString_getChar(long jarg1, CkString jarg1_, int jarg2);
  public final static native int CkString_removeAll(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_removeFirst(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_chopAtStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_urlDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_urlEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_base64Decode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_base64Encode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_qpDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_qpEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_hexDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_hexEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_entityDecode(long jarg1, CkString jarg1_);
  public final static native void CkString_entityEncode(long jarg1, CkString jarg1_);
  public final static native void CkString_appendUtf8(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendAnsi(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_clear(long jarg1, CkString jarg1_);
  public final static native void CkString_prepend(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendInt(long jarg1, CkString jarg1_, int jarg2);
  public final static native void CkString_append(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendChar(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_appendN(long jarg1, CkString jarg1_, String jarg2, int jarg3);
  public final static native void CkString_appendStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_appendEnc(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native String CkString_getEnc(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setString(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setStringAnsi(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setStringUtf8(long jarg1, CkString jarg1_, String jarg2);
  public final static native String CkString_getAnsi(long jarg1, CkString jarg1_);
  public final static native String CkString_getUtf8(long jarg1, CkString jarg1_);
  public final static native int CkString_compareStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkString_getString(long jarg1, CkString jarg1_);
  public final static native int CkString_getSizeUtf8(long jarg1, CkString jarg1_);
  public final static native int CkString_getSizeAnsi(long jarg1, CkString jarg1_);
  public final static native int CkString_getNumChars(long jarg1, CkString jarg1_);
  public final static native void CkString_trim(long jarg1, CkString jarg1_);
  public final static native void CkString_trim2(long jarg1, CkString jarg1_);
  public final static native void CkString_trimInsideSpaces(long jarg1, CkString jarg1_);
  public final static native int CkString_replaceAllOccurances(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native boolean CkString_replaceFirstOccurance(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native void CkString_toCRLF(long jarg1, CkString jarg1_);
  public final static native void CkString_toLF(long jarg1, CkString jarg1_);
  public final static native void CkString_eliminateChar(long jarg1, CkString jarg1_, char jarg2, int jarg3);
  public final static native char CkString_lastChar(long jarg1, CkString jarg1_);
  public final static native void CkString_shorten(long jarg1, CkString jarg1_, int jarg2);
  public final static native void CkString_toLowerCase(long jarg1, CkString jarg1_);
  public final static native void CkString_toUpperCase(long jarg1, CkString jarg1_);
  public final static native void CkString_encodeXMLSpecial(long jarg1, CkString jarg1_);
  public final static native void CkString_decodeXMLSpecial(long jarg1, CkString jarg1_);
  public final static native boolean CkString_containsSubstring(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_containsSubstringNoCase(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equals(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equalsStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_equalsIgnoreCase(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equalsIgnoreCaseStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_removeChunk(long jarg1, CkString jarg1_, int jarg2, int jarg3);
  public final static native void CkString_removeCharOccurances(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_replaceChar(long jarg1, CkString jarg1_, char jarg2, char jarg3);
  public final static native void CkString_chopAtFirstChar(long jarg1, CkString jarg1_, char jarg2);
  public final static native boolean CkString_saveToFile(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native long CkString_split(long jarg1, CkString jarg1_, char jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long CkString_split2(long jarg1, CkString jarg1_, String jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long CkString_tokenize(long jarg1, CkString jarg1_, String jarg2);
  public final static native long CkString_splitAtWS(long jarg1, CkString jarg1_);
  public final static native boolean CkString_beginsWith(long jarg1, CkString jarg1_, String jarg2);
  public final static native long new_CkDateTime();
  public final static native void delete_CkDateTime(long jarg1);
  public final static native int CkDateTime_get_IsDst(long jarg1, CkDateTime jarg1_);
  public final static native int CkDateTime_get_UtcOffset(long jarg1, CkDateTime jarg1_);
  public final static native void CkDateTime_SetFromCurrentSystemTime(long jarg1, CkDateTime jarg1_);
  public final static native boolean CkDateTime_SetFromRfc822(long jarg1, CkDateTime jarg1_, String jarg2);
  public final static native int CkDateTime_GetAsUnixTime(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native long CkDateTime_GetAsUnixTime64(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native double CkDateTime_GetAsOleDate(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native int CkDateTime_GetAsDosDate(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native long CkDateTime_GetAsDateTimeTicks(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native void CkDateTime_SetFromUnixTime(long jarg1, CkDateTime jarg1_, boolean jarg2, int jarg3);
  public final static native void CkDateTime_SetFromUnixTime64(long jarg1, CkDateTime jarg1_, boolean jarg2, long jarg3);
  public final static native void CkDateTime_SetFromOleDate(long jarg1, CkDateTime jarg1_, boolean jarg2, double jarg3);
  public final static native void CkDateTime_SetFromDosDate(long jarg1, CkDateTime jarg1_, boolean jarg2, int jarg3);
  public final static native void CkDateTime_SetFromDateTimeTicks(long jarg1, CkDateTime jarg1_, boolean jarg2, long jarg3);
  public final static native boolean CkDateTime_Serialize(long jarg1, CkDateTime jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkDateTime_serialize(long jarg1, CkDateTime jarg1_);
  public final static native void CkDateTime_DeSerialize(long jarg1, CkDateTime jarg1_, String jarg2);
  public final static native boolean CkDateTime_AddDays(long jarg1, CkDateTime jarg1_, int jarg2);
  public final static native long new_CkDtObj();
  public final static native void delete_CkDtObj(long jarg1);
  public final static native boolean CkDtObj_get_Utc(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Utc(long jarg1, CkDtObj jarg1_, boolean jarg2);
  public final static native int CkDtObj_get_Year(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Year(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Month(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Month(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Day(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Day(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Hour(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Hour(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Minute(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Minute(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Second(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Second(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_StructTmYear(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_StructTmYear(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_StructTmMonth(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_StructTmMonth(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native boolean CkDtObj_Serialize(long jarg1, CkDtObj jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkDtObj_serialize(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_DeSerialize(long jarg1, CkDtObj jarg1_, String jarg2);
  public final static native long new_CkByteData();
  public final static native void delete_CkByteData(long jarg1);
  public final static native byte[] CkByteData_toByteArray(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendByteArray(long jarg1, CkByteData jarg1_, byte[] jarg2);
  public final static native long CkByteData_getRange(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native String CkByteData_getRangeStr(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native String CkByteData_to_s(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendRandom(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native void CkByteData_appendInt(long jarg1, CkByteData jarg1_, int jarg2, boolean jarg3);
  public final static native void CkByteData_appendShort(long jarg1, CkByteData jarg1_, short jarg2, boolean jarg3);
  public final static native String CkByteData_getEncodedRange(long jarg1, CkByteData jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void CkByteData_appendRange(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_, int jarg3, int jarg4);
  public final static native void CkByteData_ensureBuffer(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_findBytes2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native int CkByteData_findBytes(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkByteData_beginsWith2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_beginsWith(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native void CkByteData_removeChunk(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native void CkByteData_byteSwap4321(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_pad(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native void CkByteData_unpad(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native boolean CkByteData_is7bit(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_clear(long jarg1, CkByteData jarg1_);
  public final static native int CkByteData_getSize(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendEncoded(long jarg1, CkByteData jarg1_, String jarg2, String jarg3);
  public final static native void CkByteData_encode(long jarg1, CkByteData jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native long CkByteData_getData(long jarg1, CkByteData jarg1_);
  public final static native long CkByteData_getBytes(long jarg1, CkByteData jarg1_);
  public final static native String CkByteData_getEncoded(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_append2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_equals2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_equals(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native void CkByteData_appendStr(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_appendChar(long jarg1, CkByteData jarg1_, char jarg2);
  public final static native short CkByteData_getByte(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native char CkByteData_getChar(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native long CkByteData_getUInt(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_getInt(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_getUShort(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native short CkByteData_getShort(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native boolean CkByteData_loadFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native boolean CkByteData_saveFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native boolean CkByteData_appendFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_shorten(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native long new_CkPrivateKey();
  public final static native void delete_CkPrivateKey(long jarg1);
  public final static native boolean CkPrivateKey_LoadEncryptedPem(long jarg1, CkPrivateKey jarg1_, String jarg2, String jarg3);
  public final static native boolean CkPrivateKey_LoadEncryptedPemFile(long jarg1, CkPrivateKey jarg1_, String jarg2, String jarg3);
  public final static native boolean CkPrivateKey_LoadPkcs8Encrypted(long jarg1, CkPrivateKey jarg1_, long jarg2, CkByteData jarg2_, String jarg3);
  public final static native boolean CkPrivateKey_LoadPkcs8EncryptedFile(long jarg1, CkPrivateKey jarg1_, String jarg2, String jarg3);
  public final static native boolean CkPrivateKey_GetPkcs8Encrypted(long jarg1, CkPrivateKey jarg1_, String jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkPrivateKey_GetPkcs8EncryptedPem(long jarg1, CkPrivateKey jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkPrivateKey_getPkcs8EncryptedPem(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_SavePkcs8EncryptedFile(long jarg1, CkPrivateKey jarg1_, String jarg2, String jarg3);
  public final static native boolean CkPrivateKey_SavePkcs8EncryptedPemFile(long jarg1, CkPrivateKey jarg1_, String jarg2, String jarg3);
  public final static native void CkPrivateKey_get_DebugLogFilePath(long jarg1, CkPrivateKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkPrivateKey_debugLogFilePath(long jarg1, CkPrivateKey jarg1_);
  public final static native void CkPrivateKey_put_DebugLogFilePath(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_get_VerboseLogging(long jarg1, CkPrivateKey jarg1_);
  public final static native void CkPrivateKey_put_VerboseLogging(long jarg1, CkPrivateKey jarg1_, boolean jarg2);
  public final static native boolean CkPrivateKey_LoadRsaDerFile(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_LoadPkcs8File(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_LoadPemFile(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_LoadXmlFile(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_LoadPem(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_LoadRsaDer(long jarg1, CkPrivateKey jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkPrivateKey_LoadPkcs8(long jarg1, CkPrivateKey jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkPrivateKey_LoadXml(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_SaveRsaDerFile(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_SavePkcs8File(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_SaveRsaPemFile(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_SavePkcs8PemFile(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_SaveXmlFile(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native boolean CkPrivateKey_GetRsaDer(long jarg1, CkPrivateKey jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkPrivateKey_GetPkcs8(long jarg1, CkPrivateKey jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkPrivateKey_GetRsaPem(long jarg1, CkPrivateKey jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkPrivateKey_GetPkcs8Pem(long jarg1, CkPrivateKey jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkPrivateKey_GetXml(long jarg1, CkPrivateKey jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkPrivateKey_SaveLastError(long jarg1, CkPrivateKey jarg1_, String jarg2);
  public final static native void CkPrivateKey_LastErrorXml(long jarg1, CkPrivateKey jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkPrivateKey_LastErrorHtml(long jarg1, CkPrivateKey jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkPrivateKey_LastErrorText(long jarg1, CkPrivateKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkPrivateKey_lastErrorText(long jarg1, CkPrivateKey jarg1_);
  public final static native String CkPrivateKey_lastErrorXml(long jarg1, CkPrivateKey jarg1_);
  public final static native String CkPrivateKey_lastErrorHtml(long jarg1, CkPrivateKey jarg1_);
  public final static native String CkPrivateKey_getRsaPem(long jarg1, CkPrivateKey jarg1_);
  public final static native String CkPrivateKey_getPkcs8Pem(long jarg1, CkPrivateKey jarg1_);
  public final static native String CkPrivateKey_getXml(long jarg1, CkPrivateKey jarg1_);
  public final static native long new_CkPublicKey();
  public final static native void delete_CkPublicKey(long jarg1);
  public final static native boolean CkPublicKey_LoadPkcs1Pem(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native void CkPublicKey_get_DebugLogFilePath(long jarg1, CkPublicKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkPublicKey_debugLogFilePath(long jarg1, CkPublicKey jarg1_);
  public final static native void CkPublicKey_put_DebugLogFilePath(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_get_VerboseLogging(long jarg1, CkPublicKey jarg1_);
  public final static native void CkPublicKey_put_VerboseLogging(long jarg1, CkPublicKey jarg1_, boolean jarg2);
  public final static native boolean CkPublicKey_LoadRsaDerFile(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_LoadOpenSslDerFile(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_LoadOpenSslPemFile(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_LoadXmlFile(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_LoadOpenSslPem(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_LoadOpenSslDer(long jarg1, CkPublicKey jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkPublicKey_LoadRsaDer(long jarg1, CkPublicKey jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkPublicKey_LoadXml(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_SaveRsaDerFile(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_SaveOpenSslDerFile(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_SaveOpenSslPemFile(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_SaveXmlFile(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native boolean CkPublicKey_GetRsaDer(long jarg1, CkPublicKey jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkPublicKey_GetOpenSslDer(long jarg1, CkPublicKey jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkPublicKey_GetOpenSslPem(long jarg1, CkPublicKey jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkPublicKey_GetXml(long jarg1, CkPublicKey jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkPublicKey_SaveLastError(long jarg1, CkPublicKey jarg1_, String jarg2);
  public final static native void CkPublicKey_LastErrorXml(long jarg1, CkPublicKey jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkPublicKey_LastErrorHtml(long jarg1, CkPublicKey jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkPublicKey_LastErrorText(long jarg1, CkPublicKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkPublicKey_lastErrorText(long jarg1, CkPublicKey jarg1_);
  public final static native String CkPublicKey_lastErrorXml(long jarg1, CkPublicKey jarg1_);
  public final static native String CkPublicKey_lastErrorHtml(long jarg1, CkPublicKey jarg1_);
  public final static native String CkPublicKey_getOpenSslPem(long jarg1, CkPublicKey jarg1_);
  public final static native String CkPublicKey_getXml(long jarg1, CkPublicKey jarg1_);
  public final static native boolean CkRsa_get_LittleEndian(long jarg1, CkRsa jarg1_);
  public final static native void CkRsa_put_LittleEndian(long jarg1, CkRsa jarg1_, boolean jarg2);
  public final static native void CkRsa_get_Version(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkRsa_version(long jarg1, CkRsa jarg1_);
  public final static native boolean CkRsa_OpenSslVerifyBytes(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, long jarg3, CkByteData jarg3_);
  public final static native boolean CkRsa_OpenSslSignBytes(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, long jarg3, CkByteData jarg3_);
  public final static native boolean CkRsa_OpenSslSignBytesENC(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, long jarg3, CkString jarg3_);
  public final static native String CkRsa_openSslSignBytesENC(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkRsa_OpenSslSignString(long jarg1, CkRsa jarg1_, String jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkRsa_OpenSslSignStringENC(long jarg1, CkRsa jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkRsa_openSslSignStringENC(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native boolean CkRsa_OpenSslVerifyBytesENC(long jarg1, CkRsa jarg1_, String jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkRsa_OpenSslVerifyString(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, long jarg3, CkString jarg3_);
  public final static native String CkRsa_openSslVerifyString(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkRsa_OpenSslVerifyStringENC(long jarg1, CkRsa jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkRsa_openSslVerifyStringENC(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native boolean CkRsa_VerifyPrivateKey(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native boolean CkRsa_VerifyHash(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, String jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkRsa_VerifyHashENC(long jarg1, CkRsa jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean CkRsa_SignHash(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, String jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkRsa_SignHashENC(long jarg1, CkRsa jarg1_, String jarg2, String jarg3, long jarg4, CkString jarg4_);
  public final static native String CkRsa_signHashENC(long jarg1, CkRsa jarg1_, String jarg2, String jarg3);
  public final static native boolean CkRsa_get_VerboseLogging(long jarg1, CkRsa jarg1_);
  public final static native void CkRsa_put_VerboseLogging(long jarg1, CkRsa jarg1_, boolean jarg2);
  public final static native boolean CkRsa_get_NoUnpad(long jarg1, CkRsa jarg1_);
  public final static native void CkRsa_put_NoUnpad(long jarg1, CkRsa jarg1_, boolean jarg2);
  public final static native void CkRsa_get_DebugLogFilePath(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkRsa_debugLogFilePath(long jarg1, CkRsa jarg1_);
  public final static native void CkRsa_put_DebugLogFilePath(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native boolean CkRsa_UnlockComponent(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native boolean CkRsa_SaveLastError(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native void CkRsa_LastErrorXml(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkRsa_LastErrorHtml(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkRsa_LastErrorText(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkRsa_VerifyStringENC(long jarg1, CkRsa jarg1_, String jarg2, String jarg3, String jarg4);
  public final static native boolean CkRsa_VerifyString(long jarg1, CkRsa jarg1_, String jarg2, String jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkRsa_VerifyBytesENC(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, String jarg3, String jarg4);
  public final static native boolean CkRsa_VerifyBytes(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, String jarg3, long jarg4, CkByteData jarg4_);
  public final static native String CkRsa_signStringENC(long jarg1, CkRsa jarg1_, String jarg2, String jarg3);
  public final static native String CkRsa_signBytesENC(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, String jarg3);
  public final static native boolean CkRsa_SignStringENC(long jarg1, CkRsa jarg1_, String jarg2, String jarg3, long jarg4, CkString jarg4_);
  public final static native boolean CkRsa_SignBytesENC(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, String jarg3, long jarg4, CkString jarg4_);
  public final static native boolean CkRsa_DecryptStringENC(long jarg1, CkRsa jarg1_, String jarg2, boolean jarg3, long jarg4, CkString jarg4_);
  public final static native boolean CkRsa_DecryptString(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, boolean jarg3, long jarg4, CkString jarg4_);
  public final static native boolean CkRsa_EncryptStringENC(long jarg1, CkRsa jarg1_, String jarg2, boolean jarg3, long jarg4, CkString jarg4_);
  public final static native boolean CkRsa_EncryptBytesENC(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, boolean jarg3, long jarg4, CkString jarg4_);
  public final static native boolean CkRsa_SignString(long jarg1, CkRsa jarg1_, String jarg2, String jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkRsa_SignBytes(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, String jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkRsa_DecryptBytesENC(long jarg1, CkRsa jarg1_, String jarg2, boolean jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkRsa_DecryptBytes(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, boolean jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkRsa_EncryptString(long jarg1, CkRsa jarg1_, String jarg2, boolean jarg3, long jarg4, CkByteData jarg4_);
  public final static native boolean CkRsa_EncryptBytes(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, boolean jarg3, long jarg4, CkByteData jarg4_);
  public final static native void CkRsa_get_EncodingMode(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkRsa_put_EncodingMode(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native void CkRsa_get_Charset(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkRsa_put_Charset(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native boolean CkRsa_GenerateKey(long jarg1, CkRsa jarg1_, int jarg2);
  public final static native boolean CkRsa_ExportPublicKey(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkRsa_ExportPrivateKey(long jarg1, CkRsa jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkRsa_SnkToXml(long jarg1, CkRsa jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native boolean CkRsa_ImportPublicKey(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native boolean CkRsa_ImportPrivateKey(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native int CkRsa_get_NumBits(long jarg1, CkRsa jarg1_);
  public final static native boolean CkRsa_get_OaepPadding(long jarg1, CkRsa jarg1_);
  public final static native void CkRsa_put_OaepPadding(long jarg1, CkRsa jarg1_, boolean jarg2);
  public final static native String CkRsa_lastErrorText(long jarg1, CkRsa jarg1_);
  public final static native String CkRsa_lastErrorXml(long jarg1, CkRsa jarg1_);
  public final static native String CkRsa_lastErrorHtml(long jarg1, CkRsa jarg1_);
  public final static native String CkRsa_decryptStringENC(long jarg1, CkRsa jarg1_, String jarg2, boolean jarg3);
  public final static native String CkRsa_decryptString(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, boolean jarg3);
  public final static native String CkRsa_encryptStringENC(long jarg1, CkRsa jarg1_, String jarg2, boolean jarg3);
  public final static native String CkRsa_encryptBytesENC(long jarg1, CkRsa jarg1_, long jarg2, CkByteData jarg2_, boolean jarg3);
  public final static native String CkRsa_encodingMode(long jarg1, CkRsa jarg1_);
  public final static native String CkRsa_charset(long jarg1, CkRsa jarg1_);
  public final static native String CkRsa_exportPublicKey(long jarg1, CkRsa jarg1_);
  public final static native String CkRsa_exportPrivateKey(long jarg1, CkRsa jarg1_);
  public final static native String CkRsa_snkToXml(long jarg1, CkRsa jarg1_, String jarg2);
  public final static native long new_CkRsa();
  public final static native void delete_CkRsa(long jarg1);
}
